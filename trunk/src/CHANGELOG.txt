----------------------------------------------------------
----------------------------------------------------------
  ConsolePlayer.py
----------------------------------------------------------
 Info:
   First code commited to "Console Player", widgetTable,
   was created on 2010/12/17
   First song was played 16:00 on 2010/12/21 "No Heaven"
   Auto advance, and updateing playlist by 17:00

   Data for 2011-01-22, Exactly one year since i had a working mp3 player
    Play Count         : 23846          # all songs playcount summed
    Play Time          : 65:04:33:05    # all songs playcount * length
    Play Time Week Avg : 1:06:40:38     # 
    Play Time Day Avg  : 04:22:56

   First playlist was .art +temple +yui !k-on, .path +stereopony
   The date was 2010/12/25, the first song finished at 15:24
   50th play milestone, 50 plays of Crackerman since january/22/2010 on April/24/2011

   version 0.1.0.0 was committed at 07:00 DEC 26 201, with 2696 lines of code
   version 0.1.3.0 dec 28th at 14:00
       added mutagen as an id3 library, songs can now be loaded
       by dragging mp3 files onto the window.
       the ctable is now finalized, drag/drop, and selection is
       now completly reimplemented. ~3648 line of code.
   Version 0.1.5.0 committed with 4815 lines
       translation is now complete, added the sync dialog
       there are many bugs with syncing, finding songs, generating a dead list
       and copying, all appear to stem from createMiniPath failing
   Version 0.1.6.0
       Added The file explore tab.
   Version 0.1.7.0 - committed: 11-01-14-07-40 6011 lines
       Added MpEventHook, keyboard events are filtered through the PyHook class
       listens for media keys and acts,
       Nearly everything has been smoothed out, moving versioning to 0.2.0.0
   Version 0.2.0.0 - comitted 2011-02-24 with 8032 lines (23 files)
       improved the GUI select screen
       improved the command terminal parser, full parameter switching
       is now available as well as quoted string terms ( non matching quoted terms are removed )
       info for current song now displays last date played on roll over   
   Version 0.2.1.0
       rewrote library save/load, loading now checks a version number written to the first
       line of the library file, methods can be passed by referance to control loading of different formats
       added manual next to allow for recording of skipcount
       added fade next, if a song is skipped within the first 45 seconds, it counts as a skip
           otherwise fade next will advance to the next song normally
           if past the 90% mark of the song, the song will be considered "fully played"
       added functions to autocomplete date input fields (as lon
       added sort by date, supports date, dateUS, dateEU, for the two regional
           date formatting, and the ISO806 date format by default
       Restructured the search function, breaking key parts into separate functions
       added quote / unquote to the search function 
       added frequency (2/26/2011 19:00)
           when a song finishes playing it distance from last played in days
           is averaged in to the current frequency, to give average days between playing
           still unclear what the full potential of this is 
       added a ton to the edit song dialog
           on multi edit, when editing a number value, that difference is added
           or subtracted to the songs number value, otherwise it is taken as literal
           a reset mode was added, when used one playcount is removed, last played date
           is moved back by frequency
   Version 0.2.2.0 ~9132 lines - committed 11/04/24 
           11/2/26 - 11/3/26 ~ 71 unique songs per day
           - added  optimization to search_getParam, now use dict, instead of if structure 
           added a delete single song from library feature
           - checked over MpPlayer.py, ensured that all gui updates were done
               through window messaging this should prevent future crashes
               when the work thread kicks in ( song end for last song in playlist specifically )
           Added Queue_Function signal, argumentless functions an be called through the queue
               use for updateing the gui from a thread without having to create special signals for each function
           Reworked import order, moved debug to MpScripting
           found PyInstaller, see build.bat for compiling into a windows EXE
           redid directoy structure, user specific files are found in ./usr/
   Version 0.2.3.0 ~comitted 2011-05-12 with 9500 lines
           when clicking shuffle, if multiple songs are selected, selected songs
               will be shuffled in place
           Rewrote search functions merging them under one object.
               compileing a string is now so = searchObject(string)
               object provides methods for easy searching of an array, and song matching
           Added QuoteString object, use to quote/unquote strings
           Added Styles, located in usr/style/name/
               a style is composed of a theme.dict, a dictionary of theme colors
               as well as any number of CSS files describing the widgets
               finally, images can be placed in usr/style/name/images/
           Improved song import, drag and drop folders now supported
           moving versioning to 0.2.5.0
   Version 0.2.5.0 ~comitted 2011-05-15 with 9152 lines
       added support (reading) for the following file types:
       some file types have aliases as indicated
           mp4 : 'm4a', 'm4b', 'm4p', 'mpeg4', 'aac'
           wma : 'asf', 'wma'
           flac: 'flac'
       Moved to PyQt4 - api 2 
           main difference, functions return pystrings by default
           There is a bug with Pyinstaller and Api 2, see the top of ConsoleWindow.py
       removed resource file form_main.py
           UI is now set up by function init_UI()
           Window.ui.* is now Window.*
       removed file widgetStars.py
       Finsihed load song functions
           removed load tab
           add song paths to 'external' list in Player
           execute load function to load into library
           * no called automatically after adding songs to the external list
   Version 0.2.6.0 ~comitted 2011-05-19 with 9762 lines
           fixed MpGlobal Defines, MpGlobal split into
               Settings, MpMusic, and MpGlobal
           added a spinbox to autoCreatePlaylist, to choose which preset pool to pull from
           added a settings dialog
               search preset, and colors
           fixed the Quick Select screen, now displays correctly, add frequency
           fixed initializers, 2 functions pre/post display of the main window
   Version 0.2.6.7 ~comitted 2011-05-20
           previous version was all-hella screwy
   Version 0.2.7.0
           added RELEASE setting
           project initialized with RELEASE = True will have stdout and stderr
               print to the built in console
           Added Support for phonon
               an attempt is made to load VLC, when it fails Mplayer falls back to Phonon
           support for Flashdrive mode
               media is saved without a drive, drive is determined from getcwd()
           Setting option for logging history, 
           DnD updateing of history files
   Version 0.3.0.0 ~comitted 2011-05-29 with 10843 lines 
            added auto update to build number (starts in 0.3.1.0)
            began setting up a public release
            added a help dialog, type help in the command line
            first attempt at wrapping up VLC so that it can work on XP
                it should now launch the player even if vlc crashes
   Version 0.3.2.6 committed 2011-06-05 with 11005 lines
        Explorer Window: user can now select the drive from the list of available drives.
        STOPNEXT auto update position if the playlist changes       
        playlist row selection colors, when the song is playing or has STOPINDEX set
            that row has the first columns bg color set to state, and second
            column state set to selection color.
        shift clicking widget table for selection now functions as would be expected.
   Version 0.3.2.346 committed 6/26/2011 with 11543 lines
        implemented dateeu and dateus
        'new' now always creates a playlist; if the pool is empty all sonqs are used
            new -t will take all songs not played today
        added diagnostic message system. type diag to see diag messages that are on.
        Simplified the layout of the Gui tab.
        added several keyboard sortcuts for the library, asdfertp
        
        addded BytePack, which autoGenerates MpUnPack - See the Statistics below
            packages up required files so that they can be unpacked during installation
        Added a first time run check
            when no settings file can be found, the program attempts to install itself
            to either local or AppData
            this adds a dialog asking where to unpack
        and a verify function that shows a progress bar and unpacks to a given directory
        Split MpScripting. Commands, string parsing now found in MpCommands
            Commands are now individual functions accessed by using a dictionary of ( str => function callback )
        added a volume bar as a menu in the main menubar. an icon is used instead of text for the drop down
        added loop same song and loop same playlist (red and blue arrows)
   Version 0.3.2.359 
        added a quick verify check so that if new files are added to MpUnPack
            they will auto install, and therefore all files do not need to be reinstalled
            this runs each time the player launches, to ensure these files are there
   Version 0.3.3.312 Lines: 11880, comitted 2011-07-20 20-15
        Moved all sort/search functions in MpScripting to a new file 'MpScriptingAdvanced'
        Console Now Flashes status colors on keyboard input ( like the days of old )
            secret style dictionary keys set the flash colors
        MainWindow.changeEvent now has code to detect application lose/gain focus
        volume icon now fades out on application lose focus
        added view->statusbar (current design does not work)
        a unique song id has been added. only valid for US ASCII character encodings
            very minimal support for Hirgana, Katakana, Kanjii - enough to work with small data sets
            upper 32 = [A1-6,A2-6,LA-7|B1-6,LB-7] 
            lower 32 = [T1-6,T2-6,LT-8| LEN-12  ]
        Songs are now stored as type 'Song', which is an object that inherits list
        new class ComboBox used in EditSong. allows alt-lang input
        made the shortcuts to sort library window shortcuts, not table sortcuts
        created the sort menu, is added to the Music Menu, and the table context menu
        icons indicate current sort type and whether reversed
        icons now appear on each tab in the tab bar
            diffferent icons for different types of tabs
        paylist editor now has a close button,
            and a way to distinguish itslef from other tabs
        Close button added to Tab in Play List Editor
        New style format for history, song id is used instead - super fast load time now
            next step is md5 checksums for each file
        New Save File Format - now Version 4
            now suppports saving a meta data tag
            library file can now be loaded as a playlist in any format
            that supports comments with a '#'
    Version 0.3.4.174 committed 8/11/11 with 13095 lines
        When loading styles "Main.css" is loaded first
        Any css file name starting with 'x' is ignored
        changed styling of close button on Playlist tabs
        no longer auto-adjust width of playlist during resize events
        Songs can be copied by typing Song(song)
        MpTranslate is now a stand alone file, <TODO: rename and move to global imports directory>
        new now has  -a, -f, -p
            -a : all music is added to the pool (-t still works)
            -f : searches for the quotted string
            -p : play immediatley
        NewPlayList editor - offers all abilities in the new command as a gui
        removed Select All button in the library page
        added CTRL-A
        changed CTRL-C to CTRL-I for sort by pcnt
        context menu in library now has add selection to pool
        theme command added
		Several Modules have been moved to the global module location
			*BytePack			- packages small files into python code
			*StringParser		- processes command line string input
			*StringQuoter		- tokenizes quoted substrings
			*UnicodeTranslate	- tranlate ascii to foreign language and back
			widgetLineEdit
			widgetPage
			widgetProgressBar
			widgetTable
			widgetTree
			*'ed modules were reworked to be generic enough to not depend on ConsolePlayer
		Reworked the search object, now much easier to read through the code
			parseing of frames is down consecutivley until a string needs to be pushed
		Tool tip on status widget now shows debug info for so.
		added a  create playlist button to the gui. and label prompt to indicate what it does
		reworked the history edit, and txt_main now directly calls processTextInput
		changing tabs now updates the tab gui when switched to the gui
			fixes bug where the table would update only after clicking it the first time.
		redid the versioning system.
			a special class file overwrites it's second line with the current version
			the version is pulled from this file during initialization, and updated only if in DEVMODe
			which is the only time this file exists.
	Version 0.3.5.349 - 14102 lines 11/9/2
			added a global variable and hiding of the status bar is now possible
			changes to sync Dialog, a new one iscreted each time sync is called
				and delteed on sync close
			fixed bugs introduced since last release in date functions
			date functions nolonger have hardcoded values for years
			date functions can now convert '1' to '2001' correctly (useless)
			added some date tests to testbench
			search now supports Inclusive OR, with *
				each set of or terms belongs to a different set
			bug fixes to search functions.
			about dialog
			help dialog
				information is auto genereated from the commands and SearchObject comments.
			Settings are now saved from the internal object_dict.
				they ar first converted to the format type_Attribute, then saved
			    lists are saved as type csv
			added option for defaulting to enabling media keys
			.favorite now expands to a list of favorite artists.
			Save file format for librarys and playlists now support bot CWD and unknown drive formats
				if UNKNOWN, upon loading of the first song, it guesses the drive until the correct drive is found
				then assumes that is the drive for all music.
				as always, if save format is NOT CWD OR UNKNOWN, we can support multidrive libraries
			reworked the settings reducing some values where the duplicated or clashed with other settings
				eg STATE_A = True, STATE_B = False, goes to STATE = A or B or 0.
			NOTE - THIS VERSION HAS WORKING SCROLL BARS ( they don't lag for big lists, library)
				and that they did not work once compiled into an exe
			Moving versioning to 0.3.6.x. major push to 0.4 tomorrow
    0.3.6.x
        Minor fixes while waiting for major push to 0.4.x.x
    0.4.0.151 - committed 2011/09/10 at 14401 lines
        Added support for linux
        ConsolePlayer detects 'isPosix'     at the top of many files
            and makes the correct changes to the player/drives/file locations.
        New Settings variables
            POSIX_VLC_MODULE_PATH - vlc Instance() class requires this value for initialization on ubuntu
		New Settings MultiOs mode strips all drive names before saving files
		New Playlist format, compatible with m3u files, now also saves a song ID for faster compares
		new setting allows for loading/saving playlist ad library files in an alternative foler location
        .spec has been updated to support both linux and windows.
        an icon for linux is still required
		a segFault still occurs on pisix
    0.4.1.x  
		Settings file no longer stores LAST PLAY INDEX
			instead, it is stored with the playlist that was saved
			however, the Settings still uses the LAST PLAY INDEX inside the program
		TimeBar updates
			inc-one-page buttons now skip 15 seconds
			clicking on the bar itself jumps to that time.
			TODO: there seems to be a graphical issue on drawing the bar
			
		Support for reordering the library table, in the form of a new dialog
			TODO:still need to be able to save changes to settings
		Added support to automatically save 7 backup library files to ~/backup/
			once a day, after midday( 12:00 ), and auto remove anything older than one week'
			this includes two new variables,
			Settings.SAVE_BACKUP for disabling the feature
			MpGlobal.Force_Backup, to force the backup to save even if one has already been saved today
				or it is not yet after 12:00.
		sorting by path now works as expected
		EXPLORER:
			support for renaming a single folder, a dialog is shown to get the new name
			support for renaming a single file, no pattern replacement yet
     
BUGS:
    bug 0001: on playback finish autoNext is called twice
        2011-06-15: Solved, loaded signal was sent before actually loading song
                    on slow drives the song could then be played beforeactually being loaded
                    resulting in a play complete signal for that song
                    
    bug 0002: On close, player thread closes after application quit
                    For some reason the thread exists as a separate windows process.
    bug 0003:
        [0255c090] main audio output: Reparenting an object is dangerous (02521360 -> 02521360)!
        2011-06-24: Resolved
                bug from old versions of VLC upgrade VLC to 1.1.0+
    bug 0004:
        Warning: input_item_SetURI("E:\Music\Stone_Temple_Pilots\Core\01 - Stone TemplePilots -  Core - Dead and Bloated.mp3"): file path instead of URL.
        input_SplitMRL("E:\Music\Stone_Temple_Pilots\Core\01 - Stone Temple Pilots -  Core - Dead and Bloated.mp3"): not a valid URI!
        [025392b0] main audio output: Reparenting an object is dangerous (02531360 -> 02531360)!
        Solved:  pass URI to VLC not filepath
            urllib + prepend file:/// ( three slashes required )
            
    bug 0005:
        When playing unicode files
        libdvdnav: Using dvdnav version 4.1.4
        libdvdread: Using libdvdcss version 1.2.10 for DVD access
        libdvdread: Could not open M:\japanese\Discography - Maaya Sakamoto\[2011] You cant catch me\09 ?????.mp3 with libdvdcss.
        libdvdread: Can't open M:\japanese\Discography - Maaya Sakamoto\[2011] You cant catch me\09 ?????.mp3 for reading
        libdvdnav: vm: failed to open/read the DVD
        
        Solved, surprisingly.
            had VLC 1.1.0 installed updating to 1.1.10 fixed this issue
    bug 006:
        [02a3d374] main input error: ES_OUT_SET_(GROUP_)PCR  is called too late (pts_delay increased to 300 ms)
        may be fixed with "--clock-jitter=0" 
        how will this be applied?
		
    bug 007:
        input cursor does not backtrack for implementation of custom ComboBox, on textUpdate
	bug 008:
		Segfault on posix
		possibly related to assignment of None to variable then an attempted use
		appears to be located in the autonext function. no way of finding.
		solved:
			Only happens on when using python 64bit/vlc 64bit.
			execute using 32 bit versions only.
			has to do with a ctypes/ libvlc issue of casting 64bit pointer to 32bit integer.
		
 Description:
   Console Player is MP3 player with the goal of having
   all options available through a command line, with some
   actions also available to the graphic user interface.

 Files:
   ConsolePlayer:
       initialise the application
   MpApplication:
       Create the main form layout, define signal interactions
       Qt Specific functions should go here.
   MpScripting:
       Primary script file, use for defining functions that
       will be needed nearly anywhere, but not necessarily
       a Qt Function
   MpPlayer:
       Initilialize the vlc object, the main Player object
       and the player thread
   MpGlobalDefines:
       Global variables and objects. import as *   
   MpFileAccess:
       Functions for working with the file system.
       Loading/Saving of playlists and librarys
       
----------------------------------------------------------

BytePack Statistics
Comparison of the file size before and after adding the BytePack ability
184 includes 2 new files, MpFirstTime, and MpUnPack
version 0.3.2.130 : 12,890,112 Bytes
version 0.3.2.184 : 12.914,688 Bytes
    Difference of 24,576 Bytes
    
the package was made up of icon.png + user/styles
uncompressed size:  73,362 Bytes for 41 files
package size     : 307,200 Bytes for MpUnPack.py  - increase by 418.7% over original
pyc              :  88,633 Bytes for MpUnPack.pyc - increase by 120.8% over original

the uncompiled python module is 418.7% more than the original file
the   compiled python module is 120.8% more than the original files

However even with this increased size the executable only increased by .2% - 24KB more
Comparing the size of the 7z backups in .../SourceBackUp/,
the file size increase from 128 to 224 is also only 24 kb.


sys.platform.startswith('win'):

