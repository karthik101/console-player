#! python $this
import os,sys
from PyQt4.QtCore import *
from PyQt4.QtGui import *




def __file2strbuf(filepath):
    b = QByteArray();
    io = QBuffer(b);
    io.open(QIODevice.WriteOnly)
    with open(filepath,"rb") as rf:
        data = rf.read(1024)
        while data:
            io.writeData(data)
            data = rf.read(1024)
    io.close()        
    return ''.join( ["%02X"%ord(c) for c in b.data()] )

def __strbuf2buf(strbuf):  
    buf = QByteArray();
    io = QBuffer(buf);
    io.open(QIODevice.WriteOnly)
    i=0
    while i < len(strbuf):
        hex = strbuf[i:i+2]
        io.write(chr(int(hex,16)))
        i+=2
    io.close()   
    return buf
    
def __getIcon_strbuf():
    return

def getPixMap():
    pm = QPixmap()
    buf = __strbuf2buf(__getIcon_strbuf())
    pm.loadFromData(buf,"png")
    return pm

if __name__ == "__main__":
    img = "./icon.png"
    app = QApplication(sys.argv)
    strbuf = __file2strbuf(img)
    print strbuf
    buf = __strbuf2buf(__getIcon_strbuf())
    #
    pm = QPixmap()
    pm.loadFromData(buf,"png")
    pm.save("./temp-icon.png")
